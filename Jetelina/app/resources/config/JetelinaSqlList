apino,sql,subquery,db
ji1,"insert into ftest2 (ftest2_name,ftest2_sex,ftest2_age,ftest2_ave,jetelina_delete_flg) values('{ftest2_name}','{ftest2_sex}',{ftest2_age},{ftest2_ave},{jetelina_delete_flg})","","postgresql"
ju2,"update ftest2 set ftest2_name='{ftest2_name}',ftest2_sex='{ftest2_sex}',ftest2_age={ftest2_age},ftest2_ave={ftest2_ave}","where ftest2_jt_id={jt_id}","postgresql"
jd3,"update ftest2 set jetelina_delete_flg=1","where ftest2_jt_id={jt_id}","postgresql"
ji4,"insert into ftest3 (ftest3_name,ftest3_sex,ftest3_age,ftest3_ave,jetelina_delete_flg) values('{ftest3_name}','{ftest3_sex}',{ftest3_age},{ftest3_ave},{jetelina_delete_flg})","","postgresql"
ju5,"update ftest3 set ftest3_name='{ftest3_name}',ftest3_sex='{ftest3_sex}',ftest3_age={ftest3_age},ftest3_ave={ftest3_ave}","where ftest3_jt_id={jt_id}","postgresql"
jd6,"update ftest3 set jetelina_delete_flg=1","where ftest3_jt_id={jt_id}","postgresql"
js7,"select ftest3.ftest3_name,ftest2.ftest2_name,ftest3.ftest3_age,ftest2.ftest2_age from ftest3 as ftest3,ftest2 as ftest2","where  ftest2.ftest2_ave < 0.3 and ftest3.ftest3_ave < 0.2","postgresql"
js8,"select ftest3.ftest3_jt_id,ftest3.ftest3_name,ftest3.ftest3_sex,ftest3.ftest3_age,ftest3.ftest3_ave from ftest3 as ftest3","limit {limit} offset {offset}","postgresql"
ji9,"insert into people_1000 (people_1000_user_id,people_1000_first_name,people_1000_last_name,people_1000_sex,people_1000_email,people_1000_phone,people_1000_birth,people_1000_job_title,jetelina_delete_flg) values('{people_1000_user_id}','{people_1000_first_name}','{people_1000_last_name}','{people_1000_sex}','{people_1000_email}','{people_1000_phone}',{people_1000_birth},'{people_1000_job_title}',{jetelina_delete_flg})","","postgresql"
ju10,"update people_1000 set people_1000_user_id='{people_1000_user_id}',people_1000_first_name='{people_1000_first_name}',people_1000_last_name='{people_1000_last_name}',people_1000_sex='{people_1000_sex}',people_1000_email='{people_1000_email}',people_1000_phone='{people_1000_phone}',people_1000_birth={people_1000_birth},people_1000_job_title='{people_1000_job_title}'","where people_1000_jt_id={jt_id}","postgresql"
jd11,"update people_1000 set jetelina_delete_flg=1","where people_1000_jt_id={jt_id}","postgresql"
js12,"select people_1000.people_1000_jt_id,people_1000.people_1000_user_id,people_1000.people_1000_first_name,people_1000.people_1000_last_name,people_1000.people_1000_sex,people_1000.people_1000_email,people_1000.people_1000_phone,people_1000.people_1000_birth,people_1000.people_1000_job_title from people_1000 as people_1000","limit {limit} offset {offset}","postgresql"
ji13,"insert into palt (palt_user_id,palt_first_name,palt_last_name,palt_sex,palt_email,palt_phone,palt_birth,palt_job_title,jetelina_delete_flg) values('{palt_user_id}','{palt_first_name}','{palt_last_name}','{palt_sex}','{palt_email}','{palt_phone}',{palt_birth},'{palt_job_title}',{jetelina_delete_flg})","","postgresql"
ju14,"update palt set palt_user_id='{palt_user_id}',palt_first_name='{palt_first_name}',palt_last_name='{palt_last_name}',palt_sex='{palt_sex}',palt_email='{palt_email}',palt_phone='{palt_phone}',palt_birth={palt_birth},palt_job_title='{palt_job_title}'","where palt_jt_id={jt_id}","postgresql"
jd15,"update palt set jetelina_delete_flg=1","where palt_jt_id={jt_id}","postgresql"
js16,"select palt.palt_first_name,people_1000.people_1000_first_name from palt as palt,people_1000 as people_1000","where palt.palt_jt_id<100 and (100<people_1000.people_1000_jt_id and people_1000.people_1000_jt_id <200) limit {limit} offset {offset}","postgresql"
